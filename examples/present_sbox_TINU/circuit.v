/* Generated by Yosys 0.36+42 (git sha1 70d35314d, clang 11.0.1-2 -fPIC -Os) */

module sharedSbox(clk, rst_i, sboxIn1, sboxIn2, sboxIn3, share1, share2, share3);
  wire _0_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _10_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _11_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _12_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _13_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _1_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _2_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _3_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  wire _48_;
  wire _49_;
  wire _4_;
  wire _50_;
  wire _51_;
  wire _52_;
  wire _53_;
  wire _54_;
  wire _55_;
  wire _56_;
  wire _57_;
  wire _58_;
  wire _59_;
  wire _5_;
  wire _60_;
  wire _61_;
  wire _62_;
  wire _63_;
  wire _64_;
  wire _65_;
  wire _66_;
  wire _67_;
  wire _68_;
  wire _69_;
  wire _6_;
  wire _70_;
  wire _71_;
  wire _72_;
  wire _73_;
  wire _74_;
  wire _75_;
  wire _76_;
  wire _77_;
  wire _78_;
  wire _79_;
  wire _7_;
  wire _80_;
  wire _81_;
  wire _82_;
  wire _83_;
  wire _84_;
  wire _85_;
  wire _86_;
  wire _87_;
  wire _88_;
  wire _89_;
  wire _8_;
  wire _90_;
  wire _91_;
  wire _92_;
  wire _93_;
  wire _94_;
  wire _95_;
  wire _96_;
  wire _97_;
  wire _98_;
  wire _99_;
  wire _9_;
  input clk;
  wire clk;
  wire \f1.w2 ;
  wire \f1.w3 ;
  wire [7:0] \f1.x ;
  wire \f1.x2 ;
  wire \f1.x3 ;
  wire [3:0] \f1.y ;
  wire \f1.y2 ;
  wire \f1.y3 ;
  wire \f1.z2 ;
  wire \f1.z3 ;
  wire [3:0] \f1:3 ;
  wire [7:0] f1in;
  wire [3:0] f1out;
  wire \f2.w1 ;
  wire \f2.w3 ;
  wire [7:0] \f2.x ;
  wire \f2.x1 ;
  wire \f2.x3 ;
  wire [3:0] \f2.y ;
  wire \f2.y1 ;
  wire \f2.y3 ;
  wire \f2.z1 ;
  wire \f2.z3 ;
  wire [3:0] \f2:6 ;
  wire [7:0] f2in;
  wire [3:0] f2out;
  wire \f3.w1 ;
  wire \f3.w2 ;
  wire [7:0] \f3.x ;
  wire \f3.x1 ;
  wire \f3.x2 ;
  wire [3:0] \f3.y ;
  wire \f3.y1 ;
  wire \f3.y2 ;
  wire \f3.z1 ;
  wire \f3.z2 ;
  wire [3:0] \f3:9 ;
  wire [7:0] f3in;
  wire [3:0] f3out;
  wire \g1.temp ;
  wire \g1.w2 ;
  wire \g1.w3 ;
  wire [7:0] \g1.x ;
  wire \g1.x2 ;
  wire \g1.x3 ;
  wire [3:0] \g1.y ;
  wire \g1.y2 ;
  wire \g1.y3 ;
  wire \g1.z2 ;
  wire \g1.z3 ;
  wire [3:0] \g1:12 ;
  wire [7:0] g1in;
  wire [3:0] g1out;
  wire [3:0] g1reg;
  wire \g2.w1 ;
  wire \g2.w3 ;
  wire [7:0] \g2.x ;
  wire \g2.x1 ;
  wire \g2.x3 ;
  wire [3:0] \g2.y ;
  wire \g2.y1 ;
  wire \g2.y3 ;
  wire \g2.z1 ;
  wire \g2.z3 ;
  wire [3:0] \g2:15 ;
  wire [7:0] g2in;
  wire [3:0] g2out;
  wire [3:0] g2reg;
  wire \g3.w1 ;
  wire \g3.w2 ;
  wire [7:0] \g3.x ;
  wire \g3.x1 ;
  wire \g3.x2 ;
  wire [3:0] \g3.y ;
  wire \g3.y1 ;
  wire \g3.y2 ;
  wire \g3.z1 ;
  wire \g3.z2 ;
  wire [3:0] \g3:18 ;
  wire [7:0] g3in;
  wire [3:0] g3out;
  wire [3:0] g3reg;
  input rst_i;
  wire rst_i;
  input [3:0] sboxIn1;
  wire [3:0] sboxIn1;
  input [3:0] sboxIn2;
  wire [3:0] sboxIn2;
  input [3:0] sboxIn3;
  wire [3:0] sboxIn3;
  output [3:0] share1;
  wire [3:0] share1;
  output [3:0] share2;
  wire [3:0] share2;
  output [3:0] share3;
  wire [3:0] share3;
  wire \y1.clk ;
  wire [3:0] \y1.d ;
  reg [3:0] \y1.q ;
  wire [3:0] \y1.s_current_state ;
  wire [3:0] \y1.s_next_state ;
  wire [3:0] \y1:27 ;
  wire \y2.clk ;
  wire [3:0] \y2.d ;
  reg [3:0] \y2.q ;
  wire [3:0] \y2.s_current_state ;
  wire [3:0] \y2.s_next_state ;
  wire [3:0] \y2:24 ;
  wire \y3.clk ;
  wire [3:0] \y3.d ;
  reg [3:0] \y3.q ;
  wire [3:0] \y3.s_current_state ;
  wire [3:0] \y3.s_next_state ;
  wire [3:0] \y3:21 ;
  always @(posedge clk)
    \y3.q [0] <= \y3.s_next_state [0];
  always @(posedge clk)
    \y3.q [1] <= \y3.s_next_state [1];
  always @(posedge clk)
    \y3.q [2] <= \y3.s_next_state [2];
  always @(posedge clk)
    \y3.q [3] <= \y3.s_next_state [3];
  always @(posedge clk)
    \y2.q [0] <= \y2.s_next_state [0];
  always @(posedge clk)
    \y2.q [1] <= \y2.s_next_state [1];
  always @(posedge clk)
    \y2.q [2] <= \y2.s_next_state [2];
  always @(posedge clk)
    \y2.q [3] <= \y2.s_next_state [3];
  always @(posedge clk)
    \y1.q [0] <= \y1.s_next_state [0];
  always @(posedge clk)
    \y1.q [1] <= \g1.temp ;
  always @(posedge clk)
    \y1.q [2] <= \y1.s_next_state [2];
  always @(posedge clk)
    \y1.q [3] <= \y1.s_next_state [3];
  assign share1[3] = _18_ ^ _10_;
  assign _18_ = _17_ ^ _8_;
  assign _17_ = _16_ ^ _6_;
  assign _16_ = _5_ ^ \y2.q [0];
  assign share1[2] = _14_ ^ _15_;
  assign _15_ = \y3.q [1] & \y2.q [0];
  assign _14_ = _12_ ^ _13_;
  assign _13_ = \y2.q [1] & \y3.q [0];
  assign _12_ = \y2.q [3] ^ _11_;
  assign _11_ = \y2.q [1] & \y2.q [0];
  assign share1[1] = _9_ ^ _10_;
  assign _10_ = \y3.q [3] & \y2.q [0];
  assign _9_ = _7_ ^ _8_;
  assign _8_ = \y2.q [3] & \y3.q [0];
  assign _7_ = _5_ ^ _6_;
  assign _6_ = \y2.q [3] & \y2.q [0];
  assign _5_ = \y2.q [2] ^ \y2.q [1];
  assign share1[0] = _3_ ^ _4_;
  assign _4_ = \y3.q [2] & \y2.q [0];
  assign _3_ = _1_ ^ _2_;
  assign _2_ = \y2.q [2] & \y3.q [0];
  assign _1_ = \y2.q [1] ^ _0_;
  assign _0_ = \y2.q [2] & \y2.q [0];
  assign share2[3] = _37_ ^ _29_;
  assign _29_ = \y3.q [3] & \y1.q [0];
  assign _37_ = _36_ ^ _27_;
  assign _27_ = \y1.q [3] & \y3.q [0];
  assign _36_ = _35_ ^ _25_;
  assign _25_ = \y3.q [3] & \y3.q [0];
  assign _35_ = _24_ ^ \y3.q [0];
  assign _24_ = \y3.q [2] ^ \y3.q [1];
  assign share2[2] = _33_ ^ _34_;
  assign _34_ = \y3.q [1] & \y1.q [0];
  assign _33_ = _31_ ^ _32_;
  assign _32_ = \y1.q [1] & \y3.q [0];
  assign _31_ = \y3.q [3] ^ _30_;
  assign _30_ = \y3.q [1] & \y3.q [0];
  assign share2[1] = _28_ ^ _29_;
  assign _28_ = _26_ ^ _27_;
  assign _26_ = _24_ ^ _25_;
  assign share2[0] = _22_ ^ _23_;
  assign _23_ = \y3.q [2] & \y1.q [0];
  assign _22_ = _20_ ^ _21_;
  assign _21_ = \y1.q [2] & \y3.q [0];
  assign _20_ = \y3.q [1] ^ _19_;
  assign _19_ = \y3.q [2] & \y3.q [0];
  assign share3[3] = _56_ ^ _48_;
  assign _56_ = _55_ ^ _46_;
  assign _55_ = _54_ ^ _44_;
  assign _54_ = _43_ ^ \y1.q [0];
  assign share3[2] = _52_ ^ _53_;
  assign _53_ = \y2.q [1] & \y1.q [0];
  assign _52_ = _50_ ^ _51_;
  assign _51_ = \y1.q [1] & \y2.q [0];
  assign _50_ = \y1.q [3] ^ _49_;
  assign _49_ = \y1.q [1] & \y1.q [0];
  assign share3[1] = _47_ ^ _48_;
  assign _48_ = \y2.q [3] & \y1.q [0];
  assign _47_ = _45_ ^ _46_;
  assign _46_ = \y1.q [3] & \y2.q [0];
  assign _45_ = _43_ ^ _44_;
  assign _44_ = \y1.q [3] & \y1.q [0];
  assign _43_ = \y1.q [2] ^ \y1.q [1];
  assign share3[0] = _41_ ^ _42_;
  assign _42_ = \y2.q [2] & \y1.q [0];
  assign _41_ = _39_ ^ _40_;
  assign _40_ = \y1.q [2] & \y2.q [0];
  assign _39_ = \y1.q [1] ^ _38_;
  assign _38_ = \y1.q [2] & \y1.q [0];
  assign \y1.s_next_state [3] = _77_ ^ sboxIn2[0];
  assign _77_ = sboxIn2[2] ^ sboxIn2[1];
  assign \y1.s_next_state [2] = ~(sboxIn2[2] ^ sboxIn2[1]);
  assign \g1.temp  = _75_ ^ _76_;
  assign _76_ = sboxIn2[1] & sboxIn2[0];
  assign _75_ = _73_ ^ _74_;
  assign _74_ = sboxIn2[2] & sboxIn2[0];
  assign _73_ = _72_ ^ sboxIn2[1];
  assign _72_ = _71_ ^ sboxIn3[3];
  assign _71_ = _69_ ^ _70_;
  assign _70_ = sboxIn3[1] & sboxIn2[0];
  assign _69_ = _67_ ^ _68_;
  assign _68_ = sboxIn2[1] & sboxIn3[0];
  assign _67_ = ~(_65_ ^ _66_);
  assign _66_ = sboxIn3[2] & sboxIn2[0];
  assign _65_ = sboxIn2[2] & sboxIn3[0];
  assign \y1.s_next_state [0] = _63_ ^ _64_;
  assign _64_ = sboxIn2[2] & sboxIn2[1];
  assign _63_ = _61_ ^ _62_;
  assign _62_ = sboxIn2[3] & sboxIn2[1];
  assign _61_ = _59_ ^ _60_;
  assign _60_ = sboxIn2[3] & sboxIn2[2];
  assign _59_ = _58_ ^ sboxIn2[0];
  assign _58_ = _86_ ^ _57_;
  assign _57_ = sboxIn3[2] & sboxIn2[1];
  assign _86_ = _84_ ^ _85_;
  assign _85_ = sboxIn2[2] & sboxIn3[1];
  assign _84_ = _82_ ^ _83_;
  assign _83_ = sboxIn3[3] & sboxIn2[1];
  assign _82_ = _80_ ^ _81_;
  assign _81_ = sboxIn2[3] & sboxIn3[1];
  assign _80_ = ~(_78_ ^ _79_);
  assign _79_ = sboxIn3[3] & sboxIn2[2];
  assign _78_ = sboxIn2[3] & sboxIn3[2];
  assign \y2.s_next_state [3] = \y2.s_next_state [2] ^ sboxIn3[0];
  assign \y2.s_next_state [2] = sboxIn3[2] ^ sboxIn3[1];
  assign \y2.s_next_state [1] = _114_ ^ _115_;
  assign _115_ = sboxIn3[1] & sboxIn3[0];
  assign _114_ = _112_ ^ _113_;
  assign _113_ = sboxIn3[2] & sboxIn3[0];
  assign _112_ = _111_ ^ sboxIn3[1];
  assign _111_ = _110_ ^ sboxIn1[3];
  assign _110_ = _108_ ^ _109_;
  assign _109_ = sboxIn3[1] & sboxIn1[0];
  assign _108_ = _106_ ^ _107_;
  assign _107_ = sboxIn1[1] & sboxIn3[0];
  assign _106_ = _104_ ^ _105_;
  assign _105_ = sboxIn3[2] & sboxIn1[0];
  assign _104_ = sboxIn1[2] & sboxIn3[0];
  assign \y2.s_next_state [0] = _102_ ^ _103_;
  assign _103_ = sboxIn3[2] & sboxIn1[1];
  assign _102_ = _100_ ^ _101_;
  assign _101_ = sboxIn1[2] & sboxIn3[1];
  assign _100_ = _98_ ^ _99_;
  assign _99_ = sboxIn3[2] & sboxIn3[1];
  assign _98_ = _96_ ^ _97_;
  assign _97_ = sboxIn3[3] & sboxIn1[1];
  assign _96_ = _94_ ^ _95_;
  assign _95_ = sboxIn1[3] & sboxIn3[1];
  assign _94_ = _92_ ^ _93_;
  assign _93_ = sboxIn3[3] & sboxIn3[1];
  assign _92_ = _90_ ^ _91_;
  assign _91_ = sboxIn3[3] & sboxIn1[2];
  assign _90_ = _88_ ^ _89_;
  assign _89_ = sboxIn1[3] & sboxIn3[2];
  assign _88_ = sboxIn3[0] ^ _87_;
  assign _87_ = sboxIn3[3] & sboxIn3[2];
  assign \y3.s_next_state [3] = \y3.s_next_state [2] ^ sboxIn1[0];
  assign \y3.s_next_state [2] = sboxIn1[2] ^ sboxIn1[1];
  assign \y3.s_next_state [1] = _143_ ^ _144_;
  assign _144_ = sboxIn1[1] & sboxIn1[0];
  assign _143_ = _141_ ^ _142_;
  assign _142_ = sboxIn1[2] & sboxIn1[0];
  assign _141_ = _140_ ^ sboxIn1[1];
  assign _140_ = _139_ ^ sboxIn2[3];
  assign _139_ = _137_ ^ _138_;
  assign _138_ = sboxIn2[1] & sboxIn1[0];
  assign _137_ = _135_ ^ _136_;
  assign _136_ = sboxIn1[1] & sboxIn2[0];
  assign _135_ = _133_ ^ _134_;
  assign _134_ = sboxIn2[2] & sboxIn1[0];
  assign _133_ = sboxIn1[2] & sboxIn2[0];
  assign \y3.s_next_state [0] = _131_ ^ _132_;
  assign _132_ = sboxIn2[2] & sboxIn1[1];
  assign _131_ = _129_ ^ _130_;
  assign _130_ = sboxIn1[2] & sboxIn2[1];
  assign _129_ = _127_ ^ _128_;
  assign _128_ = sboxIn1[2] & sboxIn1[1];
  assign _127_ = _125_ ^ _126_;
  assign _126_ = sboxIn2[3] & sboxIn1[1];
  assign _125_ = _123_ ^ _124_;
  assign _124_ = sboxIn1[3] & sboxIn2[1];
  assign _123_ = _121_ ^ _122_;
  assign _122_ = sboxIn1[3] & sboxIn1[1];
  assign _121_ = _119_ ^ _120_;
  assign _120_ = sboxIn2[3] & sboxIn1[2];
  assign _119_ = _117_ ^ _118_;
  assign _118_ = sboxIn1[3] & sboxIn2[2];
  assign _117_ = sboxIn1[0] ^ _116_;
  assign _116_ = sboxIn1[3] & sboxIn1[2];
  assign \f1.w2  = \y2.q [0];
  assign \f1.w3  = \y3.q [0];
  assign \f1.x  = { \y3.q , \y2.q  };
  assign \f1.x2  = \y2.q [3];
  assign \f1.x3  = \y3.q [3];
  assign \f1.y  = share1;
  assign \f1.y2  = \y2.q [2];
  assign \f1.y3  = \y3.q [2];
  assign \f1.z2  = \y2.q [1];
  assign \f1.z3  = \y3.q [1];
  assign \f1:3  = share1;
  assign f1in = { \y3.q , \y2.q  };
  assign f1out = share1;
  assign \f2.w1  = \y1.q [0];
  assign \f2.w3  = \y3.q [0];
  assign \f2.x  = { \y3.q , \y1.q  };
  assign \f2.x1  = \y1.q [3];
  assign \f2.x3  = \y3.q [3];
  assign \f2.y  = share2;
  assign \f2.y1  = \y1.q [2];
  assign \f2.y3  = \y3.q [2];
  assign \f2.z1  = \y1.q [1];
  assign \f2.z3  = \y3.q [1];
  assign \f2:6  = share2;
  assign f2in = { \y3.q , \y1.q  };
  assign f2out = share2;
  assign \f3.w1  = \y1.q [0];
  assign \f3.w2  = \y2.q [0];
  assign \f3.x  = { \y2.q , \y1.q  };
  assign \f3.x1  = \y1.q [3];
  assign \f3.x2  = \y2.q [3];
  assign \f3.y  = share3;
  assign \f3.y1  = \y1.q [2];
  assign \f3.y2  = \y2.q [2];
  assign \f3.z1  = \y1.q [1];
  assign \f3.z2  = \y2.q [1];
  assign \f3:9  = share3;
  assign f3in = { \y2.q , \y1.q  };
  assign f3out = share3;
  assign \g1.w2  = sboxIn2[0];
  assign \g1.w3  = sboxIn3[0];
  assign \g1.x  = { sboxIn2, sboxIn3 };
  assign \g1.x2  = sboxIn2[3];
  assign \g1.x3  = sboxIn3[3];
  assign \g1.y  = { \y1.s_next_state [3:2], \g1.temp , \y1.s_next_state [0] };
  assign \g1.y2  = sboxIn2[2];
  assign \g1.y3  = sboxIn3[2];
  assign \g1.z2  = sboxIn2[1];
  assign \g1.z3  = sboxIn3[1];
  assign \g1:12  = { \y1.s_next_state [3:2], \g1.temp , \y1.s_next_state [0] };
  assign g1in = { sboxIn2, sboxIn3 };
  assign g1out = { \y1.s_next_state [3:2], \g1.temp , \y1.s_next_state [0] };
  assign g1reg = \y1.q ;
  assign \g2.w1  = sboxIn1[0];
  assign \g2.w3  = sboxIn3[0];
  assign \g2.x  = { sboxIn1, sboxIn3 };
  assign \g2.x1  = sboxIn1[3];
  assign \g2.x3  = sboxIn3[3];
  assign \g2.y  = \y2.s_next_state ;
  assign \g2.y1  = sboxIn1[2];
  assign \g2.y3  = sboxIn3[2];
  assign \g2.z1  = sboxIn1[1];
  assign \g2.z3  = sboxIn3[1];
  assign \g2:15  = \y2.s_next_state ;
  assign g2in = { sboxIn1, sboxIn3 };
  assign g2out = \y2.s_next_state ;
  assign g2reg = \y2.q ;
  assign \g3.w1  = sboxIn1[0];
  assign \g3.w2  = sboxIn2[0];
  assign \g3.x  = { sboxIn1, sboxIn2 };
  assign \g3.x1  = sboxIn1[3];
  assign \g3.x2  = sboxIn2[3];
  assign \g3.y  = \y3.s_next_state ;
  assign \g3.y1  = sboxIn1[2];
  assign \g3.y2  = sboxIn2[2];
  assign \g3.z1  = sboxIn1[1];
  assign \g3.z2  = sboxIn2[1];
  assign \g3:18  = \y3.s_next_state ;
  assign g3in = { sboxIn1, sboxIn2 };
  assign g3out = \y3.s_next_state ;
  assign g3reg = \y3.q ;
  assign \y1.clk  = clk;
  assign \y1.d  = { \y1.s_next_state [3:2], \g1.temp , \y1.s_next_state [0] };
  assign \y1.s_current_state  = \y1.q ;
  assign \y1.s_next_state [1] = \g1.temp ;
  assign \y1:27  = \y1.q ;
  assign \y2.clk  = clk;
  assign \y2.d  = \y2.s_next_state ;
  assign \y2.s_current_state  = \y2.q ;
  assign \y2:24  = \y2.q ;
  assign \y3.clk  = clk;
  assign \y3.d  = \y3.s_next_state ;
  assign \y3.s_current_state  = \y3.q ;
  assign \y3:21  = \y3.q ;
endmodule
